// @generated by protoc-gen-connect-query v1.0.0 with parameter "target=ts"
// @generated from file api/v1/service.proto (package api.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import { MethodKind } from "@bufbuild/protobuf";
import { GetChangesRequest, GetChangesResponse, GetSchemaRequest, GetSchemaResponse, GetSiteIDRequest, GetSiteIDResponse, MergeChangesRequest, MergeChangesResponse } from "./service_pb.js";

/**
 * @generated from rpc api.v1.ChangeService.GetSchema
 */
export const getSchema = { 
  localName: "getSchema",
  name: "GetSchema",
  kind: MethodKind.Unary,
  I: GetSchemaRequest,
  O: GetSchemaResponse,
  service: {
    typeName: "api.v1.ChangeService"
  }
} as const;

/**
 * @generated from rpc api.v1.ChangeService.GetSiteID
 */
export const getSiteID = { 
  localName: "getSiteID",
  name: "GetSiteID",
  kind: MethodKind.Unary,
  I: GetSiteIDRequest,
  O: GetSiteIDResponse,
  service: {
    typeName: "api.v1.ChangeService"
  }
} as const;

/**
 * @generated from rpc api.v1.ChangeService.GetChanges
 */
export const getChanges = { 
  localName: "getChanges",
  name: "GetChanges",
  kind: MethodKind.Unary,
  I: GetChangesRequest,
  O: GetChangesResponse,
  service: {
    typeName: "api.v1.ChangeService"
  }
} as const;

/**
 * @generated from rpc api.v1.ChangeService.MergeChanges
 */
export const mergeChanges = { 
  localName: "mergeChanges",
  name: "MergeChanges",
  kind: MethodKind.Unary,
  I: MergeChangesRequest,
  O: MergeChangesResponse,
  service: {
    typeName: "api.v1.ChangeService"
  }
} as const;
